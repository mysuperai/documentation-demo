(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{129:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return s})),r.d(t,"toc",(function(){return l})),r.d(t,"default",(function(){return p}));var n=r(3),a=r(7),o=(r(0),r(204)),c={sidebar_label:"stream",title:"scrapy.core.http2.stream"},s={unversionedId:"scrapy/scrapy/core/http2/stream",id:"scrapy/scrapy/core/http2/stream",isDocsHomePage:!1,title:"scrapy.core.http2.stream",description:"InactiveStreamClosed Objects",source:"@site/docs/scrapy/scrapy/core/http2/stream.md",sourceDirName:"scrapy/scrapy/core/http2",slug:"/scrapy/scrapy/core/http2/stream",permalink:"/documentation-demo/docs/scrapy/scrapy/core/http2/stream",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/scrapy/scrapy/core/http2/stream.md",version:"current",sidebar_label:"stream",frontMatter:{sidebar_label:"stream",title:"scrapy.core.http2.stream"},sidebar:"tutorialSidebar",previous:{title:"scrapy.core.http2.protocol",permalink:"/documentation-demo/docs/scrapy/scrapy/core/http2/protocol"},next:{title:"scrapy.core.scheduler",permalink:"/documentation-demo/docs/scrapy/scrapy/core/scheduler"}},l=[{value:"InactiveStreamClosed Objects",id:"inactivestreamclosed-objects",children:[]},{value:"Stream Objects",id:"stream-objects",children:[]}],i={toc:l};function p(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},i,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"inactivestreamclosed-objects"},"InactiveStreamClosed Objects"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"},"class InactiveStreamClosed(ConnectionClosed)\n")),Object(o.b)("p",null,"Connection was closed without sending request headers\nof the stream. This happens when a stream is waiting for other\nstreams to close and connection is lost."),Object(o.b)("h2",{id:"stream-objects"},"Stream Objects"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"},"class Stream()\n")),Object(o.b)("p",null,"Represents a single HTTP/2 Stream."),Object(o.b)("p",null,"Stream is a bidirectional flow of bytes within an established connection,\nwhich may carry one or more messages. Handles the transfer of HTTP Headers\nand Data frames."),Object(o.b)("p",null,"Role of this class is to"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Combine all the data frames")),Object(o.b)("h4",{id:"__init__"},"_","_","init","_","_"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"},' | __init__(stream_id: int, request: Request, protocol: "H2ClientProtocol", download_maxsize: int = 0, download_warnsize: int = 0) -> None\n')),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Arguments"),":"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"stream_id")," - Unique identifier for the stream within a single HTTP/2 connection"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"request")," - The HTTP request associated to the stream"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"protocol")," - Parent H2ClientProtocol instance")),Object(o.b)("h4",{id:"get_response"},"get","_","response"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"}," | get_response() -> Deferred\n")),Object(o.b)("p",null,"Simply return a Deferred which fires when response\nfrom the asynchronous request is available"),Object(o.b)("h4",{id:"send_data"},"send","_","data"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"}," | send_data() -> None\n")),Object(o.b)("p",null,"Called immediately after the headers are sent. Here we send all the\ndata as part of the request."),Object(o.b)("p",null,"If the content length is 0 initially then we end the stream immediately and\nwait for response data."),Object(o.b)("p",null,"Warning: Only call this method when stream not closed from client side\nand has initiated request already by sending HEADER frame. If not then\nstream will raise ProtocolError (raise by h2 state machine)."),Object(o.b)("h4",{id:"receive_window_update"},"receive","_","window","_","update"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"}," | receive_window_update() -> None\n")),Object(o.b)("p",null,"Flow control window size was changed.\nSend data that earlier could not be sent as we were\nblocked behind the flow control."),Object(o.b)("h4",{id:"reset_stream"},"reset","_","stream"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"}," | reset_stream(reason: StreamCloseReason = StreamCloseReason.RESET) -> None\n")),Object(o.b)("p",null,"Close this stream by sending a RST_FRAME to the remote peer"),Object(o.b)("h4",{id:"close"},"close"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-python"}," | close(reason: StreamCloseReason, errors: Optional[List[BaseException]] = None, from_protocol: bool = False) -> None\n")),Object(o.b)("p",null,"Based on the reason sent we will handle each case."))}p.isMDXComponent=!0},204:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return u}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=a.a.createContext({}),p=function(e){var t=a.a.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},b=function(e){var t=p(e.components);return a.a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),b=p(r),m=n,u=b["".concat(c,".").concat(m)]||b[m]||d[m]||o;return r?a.a.createElement(u,s(s({ref:t},i),{},{components:r})):a.a.createElement(u,s({ref:t},i))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,c=new Array(o);c[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,c[1]=s;for(var i=2;i<o;i++)c[i]=r[i];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);